library(agriutilities)
library(agriutilities)
library(agriutilities)
library(agriutilities)
importFrom("stats", "na.omit")
library(agriutilities)
library(agriutilities)
library(agriutilities)
library(agriutilities)
library(agriutilities)
library(agriutilities)
library(agriutilities)
install.packages("pkgdown")
pkgdown::build_reference()
pkgdown::build_home()
pkgdown::build_articles()
pkgdown::build_news()
pkgdown::build_site
pkgdown::build_site()
pkgdown::build_home()
pkgdown::build_reference()
pkgdown::build_reference_index()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference()
pkgdown::build_reference_index()
pkgdown::build_reference(lazy = F)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
library(agriutilities)
library(agriutilities)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
install.packages("C:/Users/japaricio/Downloads/descargar 2021/ASExtras4_1.0.zip", repos = NULL, type = "win.binary")
library(ASExtras4)
fa.asreml
fa.asreml %>% View()
library(tidyverse)
fa.asreml %>% View()
library(agriutilities)
usethis::use_package("plyr")
library(agriutilities)
devtools::load_all(".")
library(agriutilities)
library(agriutilities)
usethis::use_package("ggrepel")
library(agriutilities)
library(agriutilities)
print(summary(sqrt(1:100^2+1:100^2)))
print("fscore")
print("fscore \n")
library(agriutilities)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
library(agriutilities)
pkgdown::build_reference_index()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
library(agriutilities)
library(agriutilities)
library(agriutilities)
data("iris")
iris
library(agriutilities)
ggCor(iris)
ggCor(iris)
library(agriutilities)
library(agriutilities)
library(agriutilities)
ggCor(iris)
ggCor(iris, returnN = T)
ggCor(iris,colours = c("#db4437","white","#4285f4"), returnN = T)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
# dat <- agridat::john.alpha
## fit model ---------------------------------------------------------------
## random genotype effect
# g.ran <- lme4::lmer(data  = dat, formula = yield ~ rep + (1|gen) + (1|rep:block))
# varG.pvalue(g.ran, "gen")
dat <- agridat::john.alpha
## fit model ---------------------------------------------------------------
# random genotype effect
g.ran <- lme4::lmer(data  = dat, formula = yield ~ rep + (1|gen) + (1|rep:block))
varG.pvalue(g.ran, "gen")
library(agriutilities)
cor(iris[,-5])
data(iris)
M = cor(iris[,-5])
covcor_heat(M, corr = T)
# Get lower triangle of the correlation matrix
get_lower_tri<-function(cormat){
cormat[upper.tri(cormat)] <- NA
return(cormat)
}
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
reorder_cormat <- function(cormat){
# Use correlation between variables as distance
dd <- as.dist((1-cormat)/2)
hc <- hclust(dd)
cormat <-cormat[hc$order, hc$order]
}
cormat <- reorder_cormat(matrix)
matrix = M
M
cormat <- reorder_cormat(matrix)
upper_tri <- get_upper_tri(matrix)
upper_tri
reshape2::melt(upper_tri, na.rm = TRUE)
reshape2::melt
usethis::use_package("reshape2")
library(agriutilities)
library(agriutilities)
data(iris)
M = cor(iris[,-5])
covcor_heat(M, corr = T)
library(agriutilities)
data(iris)
M = cor(iris[,-5])
covcor_heat(M, corr = T)
usethis::use_vignette("SpATS")
library(agriutilities)
library(SpATS)
dat <- agridat::john.alpha
dat$R <- as.factor(dat$row)
dat <- agridat::john.alpha
dat$R <- as.factor(dat$row)
dat
data(wheatdata)
wheatdata$R <- as.factor(wheatdata$row)
wheatdata$C <- as.factor(wheatdata$col)
# Without nested basis
m1 <- SpATS(response = "yield", spatial = ~ PSANOVA(col, row, nseg = c(10,20), nest.div = 2),
genotype = "geno", fixed = ~ colcode + rowcode, random = ~ R + C, data = wheatdata,
control =  list(tolerance = 1e-03))
library(agriutilities)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
library(agriutilities)
library(SpATS)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(agriutilities)
library(SpATS)
data(wheatdata)
wheatdata$R <- as.factor(wheatdata$row)
wheatdata$C <- as.factor(wheatdata$col)
# Without nested basis
m1 <- SpATS(response = "yield", spatial = ~ PSANOVA(col, row, nseg = c(10,20), nest.div = 2),
genotype = "geno", fixed = ~ colcode + rowcode, random = ~ R + C, data = wheatdata,
control =  list(tolerance = 1e-03))
library(agriutilities)
library(SpATS)
library(agriutilities)
library(SpATS)
library(agriutilities)
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference(lazy = F)
pkgdown::build_articles_index()
pkgdown::build_articles()
library(agriutilities)
library(SpATS)
wheatdata[ 1 , "yield"]
